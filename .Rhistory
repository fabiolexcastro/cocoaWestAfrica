# Load data ---------------------------------------------------------------
ext <- readRDS(file = '../rds/extent.rds')
plot(ext)
# Current -----------------------------------------------------------------
pth <- '//dapadfs/data_cluster_4/observed/gridded_products/worldclim/Global_2_5min'
fls <- list.files(pth, full.names = TRUE) %>%
grep(paste0(vrs, collapse = '|'), ., value = TRUE) %>%
mixedsort()
dir.create('../data/asc/bse')
rm(list = ls())
options(scipen = 999)
# Load data ---------------------------------------------------------------
msk <- raster('../data/asc/bse/msk.asc')
# Climate data ------------------------------------------------------------
fls <- list.files('../data/asc/clm/crn', full.names = TRUE, patter = '.asc') %>%
mixedsort()
fls
# Load libraries ----------------------------------------------------------
require(pacman)
pacman::p_load(raster, rgdal, rgeos, stringr, velox, sf, tidyverse, gtools, dismo)
# Initial setup -----------------------------------------------------------
g <- gc(reset = TRUE)
rm(list = ls())
options(scipen = 999)
# Load data ---------------------------------------------------------------
msk <- raster('../data/asc/bse/msk.asc')
msk
# Climate data ------------------------------------------------------------
fls <- list.files('../data/asc/clm/crn', full.names = TRUE, patter = '.asc') %>%
mixedsort()
fls
var <- c('prec', 'tmin', 'tmean', 'tmax')
for(i in 1:length(var)){
eval(parse(text = paste0(var[i], ' <- grep(var[', i, '], fls, value = T) %>% mixedsort() %>% stack()')))
}
# Solar radiation ---------------------------------------------------------
xtr <- list.files('//dapadfs/workspace_cluster_9/Coffee_Cocoa2/_colombiaETP/_data/_tif/ET_SolRad', full.names = TRUE) %>%
grep('/et_', ., value = TRUE) %>%
mixedsort() %>%
stack()
xtr
xtr <- raster::crop(xtr, extent(msk))
xtr <- resample(x = xtr, y = crn, method = 'ngb')
xtr <- resample(x = xtr, y = msk, method = 'ngb')
xtr <- xtr*c(31,29,31,30,31,30,31,31,30,31,30,31)
xtr
extent(xtr)
extent(msk)
xtr
Map('writeRaster', x = xtr, paste0('../data/asc/clm/crn/', nms, '.asc'), overwrite = TRUE)
nms <- names(xtr)
xtr <- unstack(xtr)
Map('writeRaster', x = xtr, paste0('../data/asc/clm/crn/', nms, '.asc'), overwrite = TRUE)
xtr <- stack(xtr)
extent(xtr) == extent(msk)
# Calculating the ETP variables -------------------------------------------
etp <- 0.0013 * 0.408 * xtr * (tmean + 17) * (tmax - tmean - 0.0123 * prec) ^ 0.76
etp <- unstack(etp)
etp
Map('writeRaster', x = etp, filename = paste0('../data/asc/clm/crn/etp_', 1:12, '.asc'), overwrite = TRUE)
etp <- stack(etp)
# To calculate bioclimatic variables --------------------------------------
biostack <- biovars(prec,tmin,tmax)
# Review files
fls <- list.files('../data/asc/clm/crn')
fls
# Review files
fls <- list.files('../data/asc/clm/crn', overwrite = TRUE)
# Review files
fls <- list.files('../data/asc/clm/crn', full.names = TRUE)
fls
# Review files
fls <- list.files('../data/asc/clm/crn', full.names = TRUE) %>%
grep('bio_', ., value = T)
fls
list.files('../data/asc/clm/crn', full.names = TRUE)
# Review files
fls <- list.files('../data/asc/clm/crn', full.names = TRUE) %>%
grep('bio', ., value = T)
fls
gcm <- list.files('../data/asc/clm/ftr/2020_2049')
gcm
length(var)
xtr <- list.files('../data/asc/clm/crn', full.names = TRUE, pattern = 'et_sol')
xtr
xtr <- list.files('../data/asc/clm/crn', full.names = TRUE, pattern = 'et_sol') %>%
mixedsort() %>%
stack()
xtr
gc <- gcm[1]; yr <- yrs[1]
# gc <- gcm[1]; yr <- yrs[1]
gc <- paste0(gc, '/')
fls <- paste0('../data/asc/clm/ftr/', yr, '/', gc) %>%
list.files(., full.names = TRUE, pattern = '.asc$') %>%
mixedsort()
fls
gc <- gcm[1]; yr <- yrs[1]
# gc <- gcm[1]; yr <- yrs[1]
gc <- paste0(gc, '/')
fls <- paste0('../data/asc/clm/ftr/', yr, '/', gc) %>%
list.files(., full.names = TRUE, pattern = '.asc$') %>%
mixedsort()
gc <- gcm[1]; yr <- yrs[1]
yrs <- list.files('../data/asc/clm/ftr')
require(pacman)
pacman::p_load(raster, rgdal, rgeos, gtools, tidyverse, stringr, velox, sf, foreach, doSNOW, parallel, rgbif)
# Initial setup -----------------------------------------------------------
g <- gc(reset = TRUE)
rm(list = ls())
options(scipen = 999)
# Load data ---------------------------------------------------------------
gbl <- read_csv('../data/pnt/tbl/cocoa_global.csv')
all <- shapefile('../data/shp/all_countries.shp')
pnt <- shapefile('../data/pnt/shp/IturiCocoaFields_geo.shp')
msk <- raster('../data/asc/bse/msk.asc')
# Download cocoa data from GBIF -------------------------------------------
gbf <- occ_data(scientificName = 'Theobroma cacao',
limit = 20000,
hasCoordinate = TRUE,
hasGeospatialIssue = FALSE)[[2]]
coordinates(gbf) <- ~ decimalLongitude + decimalLatitude
crs(gbf) <- crs(pnt)
crs(msk) <- crs(pnt)
msk_pol <- rasterToPolygons(msk, dissolve = T)
writeOGR(obj = msk_pol, dsn = '../data/shp', layer = 'mask_polygon', driver = 'ESRI Shapefile')
countries <- crop(all, msk_pol)
writeOGR(obj = countries, dsn = '../data/shp', layer = 'countries_africa', driver = 'ESI Shapefile')
countries_vec <- countries@data$ENGLISH
# GBIF --------------------------------------------------------------------
gbf_zne <- gIntersection(msk_pol, gbf)
crd_gbf <- coordinates(gbf_zne) %>%
as_tibble()
points(crd_gbf$x, crd_gbf$y, pch = 16, col = 'red')
# Point fields ------------------------------------------------------------
pnt_fld <- coordinates(pnt) %>%
as_tibble() %>%
setNames(colnames(crd_gbf))
# Data from cocoa global --------------------------------------------------
countries_global <- gbl %>%
distinct(Country) %>%
pull()
gbl_afr <- gbl %>% filter(Country %in% countries_vec)
points(gbl_afr$Longitude, gbl_afr$Latitude, pch = 16, col = 'red')
pnt_afr <- gbl_afr %>%
dplyr::select(Longitude, Latitude) %>%
setNames(colnames(pnt_fld))
# Rbind -------------------------------------------------------------------
pnts <- rbind(crd_gbf, pnt_fld, pnt_afr)
write.csv(pnts, '../data/pnt/tbl/all_points.csv', row.names = TRUE)
pnts$id <- 1:nrow(pnts)
coordinates(pnts) <- ~ x + y
# Extraction for the study zone -------------------------------------------
pnts_cut <- crop(pnts, countries)
